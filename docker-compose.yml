version: '3'

services:
  ## MySQL Docker compose config
  mysql-estudou:
    container_name: mysql-estudou
    image: mysql
    restart: always
    environment:
      - MYSQL_DATABASE=estudou_db
      - MYSQL_USER=jeiel
      - MYSQL_PASSWORD=jeiel
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-estudou:/var/lib/mysql

  ## Mongo configuration
  mongo-estudou:
    container_name: mongo-estudou
    image: mongo:7.0.5-jammy
    restart: unless-stopped
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db

  ## Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.4
    container_name: keycloak
    command: ["start-dev", "--import-realm"]
    environment:
      - DB_VENDOR=MYSQL
      - DB_ADDR=mysql
      - DB_DATABASE=keycloak
      - DB_USER=jeiel
      - DB_PASSWORD=jeiel
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8080:8080"
    restart: always
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - mysql-keycloak

  ## Keycloak configuration
  mysql-keycloak:
    container_name: mysql-keycloak
    image: mysql
    volumes:
      - ./mysql-keycloak:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=keycloak
      - MYSQL_USER=jeiel
      - MYSQL_PASSWORD=jeiel
      - MYSQL_ROOT_PASSWORD=password

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=1000

  ## KAFKA broker
  broker:
    image: confluentinc/cp-kafka:7.5.3
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## DISCOVERY SERVER
  discovery-server:
    image: jeielalves/discovery-server:latest
    container_name: discovery-server
    pull_policy: always
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  ## API GATEWAY
  api-gateway:
    image: jeielalves/api-gateway:latest
    container_name: api-gateway
    pull_policy: always
    ports:
      - "8181:8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=trace
    depends_on:
      - zipkin
      - keycloak
      - discovery-server

  ## Category service
  category-service:
    container_name: category-service
    image: jeielalves/category-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql-estudou
      - discovery-server
      - api-gateway
      - zipkin

  ## Goal Service
  goal-service:
    container_name: goal-service
    image: jeielalves/goal-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql-estudou
      - discovery-server
      - api-gateway
      - zipkin

  ## Mission Service
  mission-service:
    container_name: mission-service
    image: jeielalves/mission-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql-estudou
      - discovery-server
      - api-gateway
      - zipkin

  ## Schedule Service
  schedule-service:
    container_name: schedule-service
    image: jeielalves/schedule-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo-estudou
      - broker
      - discovery-server
      - api-gateway
      - zipkin

  ## Notification Service
  notification-service:
    container_name: notification-service
    image: jeielalves/notification-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - broker
      - discovery-server
      - api-gateway


version: '3'

services:

  ## MySQL Docker compose config
  mysql-category:
    container_name: mysql-category
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: "category_service"
      MYSQL_USER: "jeiel"
      MYSQL_PASSWORD: "jeiel"
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-category:/data/mysql

  ## Mongo configuration
  mongo:
    container_name: mongo-schedule
    image: mongo:7.0.5-jammy
    restart: unless-stopped
    ports:
      - "27018:27017"
    expose:
      - "27018"
    volumes:
      - ./mongo-data:/data/db

  ## Keycloak configuration
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql
    volumes:
      - ./mysql-keycloak-data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE="keycloak"
      - MYSQL_USER="jeiel"
      - MYSQL_PASSWORD="jeiel"
      - MYSQL_ROOT_PASSWORD="password"

  ## Need to verify realm-export.json
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.4
    container_name: keycloak
    command: ["start-dev", "--import-realm"]
    environment:
      - DB_VENDOR=MYSQL
      - DB_ADDR=mysql
      - DB_DATABASE=keycloak
      - DB_USER=jeiel
      - DB_PASSWORD=jeiel
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8181:8080"
    restart: always
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 1000

  broker:
    image: confluentinc/cp-kafka:7.5.3
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## DISCOVERY SERVER
  discovery-server:
    image: jeielalves/discovery-server:latest
    container_name: discovery-server
    pull_policy: always
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  ## API GATEWAY
  api-gateway:
    image: jeielalves/api-gateway:latest
    container_name: api-gateway
    pull_policy: always
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - zipkin
      - keycloak
      - discovery-server

  ## Category service
  category-service:
    container_name: category-service
    image: jeielalves/category-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql-category
      - discovery-server
      - api-gateway
      - zipkin